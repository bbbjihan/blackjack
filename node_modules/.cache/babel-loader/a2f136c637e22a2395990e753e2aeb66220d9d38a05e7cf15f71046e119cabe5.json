{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\blackjack\\\\src\\\\components\\\\Table\\\\Table.js\";\nimport React from \"react\";\nimport './Table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = _ref => {\n  let {\n    money,\n    setMoney,\n    bet,\n    setBet,\n    phase,\n    setPhase,\n    deckD,\n    deckP,\n    scoreD,\n    scoreP\n  } = _ref;\n  const icon = value => {\n    if (value === \"spade\") return \"♠\";\n    if (value === \"diamond\") return \"◆\";\n    if (value === \"heart\") return \"♥\";\n    if (value === \"clover\") return \"♣\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"dealer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"dealertag\",\n          children: \"DEALER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"dealerScore\",\n          children: phase === 0 ? 0 : scoreD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), phase === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dealerCard\",\n        children: deckD.map((card, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: card[1],\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-number\",\n                children: card[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-icon\",\n                children: icon(card[1])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"playertag\",\n          children: \"PLAYER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"playerScore\",\n          children: phase === 0 ? 0 : scoreP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), phase === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"playerCard\",\n        children: deckP.map((card, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: card[1],\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-number\",\n                children: card[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-icon\",\n                children: icon(card[1])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Table","_ref","money","setMoney","bet","setBet","phase","setPhase","deckD","deckP","scoreD","scoreP","icon","value","children","class","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","_c","$RefreshReg$"],"sources":["D:/Projects/blackjack/src/components/Table/Table.js"],"sourcesContent":["import React from \"react\";\r\nimport './Table.css';\r\n\r\n\r\nconst Table = ({money, setMoney, bet, setBet, phase, setPhase, deckD, deckP, scoreD, scoreP}) => {\r\n    const icon = (value) => {\r\n        if (value === \"spade\") return \"♠\";\r\n        if (value === \"diamond\") return \"◆\";\r\n        if (value === \"heart\") return \"♥\";\r\n        if (value === \"clover\") return \"♣\";\r\n    }\r\n    return(\r\n        <div>\r\n            <div class=\"dealer\">\r\n                <div class=\"status\">\r\n                    <div class=\"dealertag\">DEALER</div>\r\n                    <div class=\"dealerScore\">{phase === 0 ? 0 : scoreD}</div>\r\n                </div>\r\n                {phase === 0 ?\r\n                    <></>\r\n                :\r\n                    <div class=\"dealerCard\">\r\n                        {deckD.map((card,index) => {\r\n                            return (\r\n                                <div class=\"card\">\r\n                                    <div class={card[1]}>\r\n                                        <div class=\"card-number\">{card[0]}</div>\r\n                                        <div class=\"card-icon\">\r\n                                            {icon(card[1])}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div class=\"player\">\r\n                <div class=\"status\">\r\n                    <div class=\"playertag\">PLAYER</div>\r\n                    <div class=\"playerScore\">{phase === 0 ? 0 :scoreP}</div>\r\n                </div>\r\n                {phase === 0 ?\r\n                    <></>\r\n                :\r\n                    <div class=\"playerCard\">\r\n                        {deckP.map((card,index) => {\r\n                            return (\r\n                                <div class=\"card\">\r\n                                    <div class={card[1]}>\r\n                                        <div class=\"card-number\">{card[0]}</div>\r\n                                        <div class=\"card-icon\">\r\n                                            {icon(card[1])}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}