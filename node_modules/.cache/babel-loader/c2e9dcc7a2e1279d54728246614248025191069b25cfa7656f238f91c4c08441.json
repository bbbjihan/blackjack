{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\blackjack\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Choose from './components/Choose';\nimport Inform from './components/Inform';\nimport Status from './components/Status';\nimport Table from './components/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [phase, setPhase] = useState(0);\n  //0: betting, 1: opened, 2: shuffling, 3: distribute, 4: result,\n  const [money, setMoney] = useState(100);\n  const [bet, setBet] = useState(0);\n  const [deckD, setDeckD] = useState([[10, \"spade\"], [5, \"heart\"]]);\n  const [deckP, setDeckP] = useState([[11, \"diamond\"], [8, \"clover\"]]);\n  const [deck, setDeck] = useState([]);\n  const [scoreD, setScoreD] = useState(15);\n  const [scoreP, setScoreP] = useState(19);\n  const [inform, setInform] = useState(\"\");\n  const deckInit = () => {\n    setDeck([[1, \"spade\"], [2, \"spade\"], [3, \"spade\"], [4, \"spade\"], [5, \"spade\"], [6, \"spade\"], [7, \"spade\"], [8, \"spade\"], [9, \"spade\"], [10, \"spade\"], [11, \"spade\"], [12, \"spade\"], [13, \"spade\"], [1, \"diamond\"], [2, \"diamond\"], [3, \"diamond\"], [4, \"diamond\"], [5, \"diamond\"], [6, \"diamond\"], [7, \"diamond\"], [8, \"diamond\"], [9, \"diamond\"], [10, \"diamond\"], [11, \"diamond\"], [12, \"diamond\"], [13, \"diamond\"], [1, \"heart\"], [2, \"heart\"], [3, \"heart\"], [4, \"heart\"], [5, \"heart\"], [6, \"heart\"], [7, \"heart\"], [8, \"heart\"], [9, \"heart\"], [10, \"heart\"], [11, \"heart\"], [12, \"heart\"], [13, \"heart\"], [1, \"clover\"], [2, \"clover\"], [3, \"clover\"], [4, \"clover\"], [5, \"clover\"], [6, \"clover\"], [7, \"clover\"], [8, \"clover\"], [9, \"clover\"], [10, \"clover\"], [11, \"clover\"], [12, \"clover\"], [13, \"clover\"]]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Status, {\n        money: money,\n        setMoney: setMoney,\n        bet: bet,\n        setBet: setBet,\n        phase: phase,\n        setPhase: setPhase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        scoreD: scoreD,\n        setScoreD: setScoreD,\n        scoreP: scoreP,\n        setScoreP: setScoreP,\n        deckD: deckD,\n        setDeckD: setDeckD,\n        deckP: deckP,\n        setDeckP: setDeckP,\n        money: money,\n        setMoney: setMoney,\n        bet: bet,\n        setBet: setBet,\n        phase: phase,\n        setPhase: setPhase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inform, {\n        inform: inform,\n        setInform: setInform,\n        scoreD: scoreD,\n        setScoreD: setScoreD,\n        scoreP: scoreP,\n        setScoreP: setScoreP,\n        deckD: deckD,\n        setDeckD: setDeckD,\n        deckP: deckP,\n        setDeckP: setDeckP,\n        money: money,\n        setMoney: setMoney,\n        bet: bet,\n        setBet: setBet,\n        phase: phase,\n        setPhase: setPhase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Choose, {\n        deck: deck,\n        setDeck: setDeck,\n        deckInit: deckInit,\n        inform: inform,\n        setInform: setInform,\n        scoreD: scoreD,\n        setScoreD: setScoreD,\n        scoreP: scoreP,\n        setScoreP: setScoreP,\n        deckD: deckD,\n        setDeckD: setDeckD,\n        deckP: deckP,\n        setDeckP: setDeckP,\n        money: money,\n        setMoney: setMoney,\n        bet: bet,\n        setBet: setBet,\n        phase: phase,\n        setPhase: setPhase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N7ld7eSJbwvDLKEssPp94HmlCdA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Choose","Inform","Status","Table","jsxDEV","_jsxDEV","App","_s","phase","setPhase","money","setMoney","bet","setBet","deckD","setDeckD","deckP","setDeckP","deck","setDeck","scoreD","setScoreD","scoreP","setScoreP","inform","setInform","deckInit","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/blackjack/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Choose from './components/Choose';\nimport Inform from './components/Inform';\nimport Status from './components/Status';\nimport Table from './components/Table';\n\nfunction App() {\n  const [phase, setPhase] = useState(0);\n  //0: betting, 1: opened, 2: shuffling, 3: distribute, 4: result,\n  const [money, setMoney] = useState(100);\n  const [bet, setBet] = useState(0);\n  const [deckD, setDeckD] = useState([[10,\"spade\"],[5,\"heart\"]]);\n  const [deckP, setDeckP] = useState([[11,\"diamond\"],[8,\"clover\"]]);\n  const [deck, setDeck] = useState([]);\n  const [scoreD, setScoreD] = useState(15);\n  const [scoreP, setScoreP] = useState(19);\n  const [inform, setInform] = useState(\"\");\n\n  const deckInit = () => {\n    setDeck([\n      [1,\"spade\"],[2,\"spade\"],[3,\"spade\"],[4,\"spade\"],[5,\"spade\"],[6,\"spade\"],[7,\"spade\"],[8,\"spade\"],[9,\"spade\"],[10,\"spade\"],[11,\"spade\"],[12,\"spade\"],[13,\"spade\"],\n      [1,\"diamond\"],[2,\"diamond\"],[3,\"diamond\"],[4,\"diamond\"],[5,\"diamond\"],[6,\"diamond\"],[7,\"diamond\"],[8,\"diamond\"],[9,\"diamond\"],[10,\"diamond\"],[11,\"diamond\"],[12,\"diamond\"],[13,\"diamond\"],\n      [1,\"heart\"],[2,\"heart\"],[3,\"heart\"],[4,\"heart\"],[5,\"heart\"],[6,\"heart\"],[7,\"heart\"],[8,\"heart\"],[9,\"heart\"],[10,\"heart\"],[11,\"heart\"],[12,\"heart\"],[13,\"heart\"],\n      [1,\"clover\"],[2,\"clover\"],[3,\"clover\"],[4,\"clover\"],[5,\"clover\"],[6,\"clover\"],[7,\"clover\"],[8,\"clover\"],[9,\"clover\"],[10,\"clover\"],[11,\"clover\"],[12,\"clover\"],[13,\"clover\"],\n    ])\n  }\n\n  return (\n    <div className=\"App\">\n      <div class=\"app\">\n        <Status money={money} setMoney={setMoney} bet={bet} setBet={setBet} phase={phase} setPhase={setPhase}/>\n        <Table scoreD={scoreD} setScoreD={setScoreD} scoreP={scoreP} setScoreP={setScoreP} deckD={deckD} setDeckD={setDeckD} deckP={deckP} setDeckP={setDeckP} money={money} setMoney={setMoney} bet={bet} setBet={setBet} phase={phase} setPhase={setPhase}/>\n        <Inform inform={inform} setInform={setInform} scoreD={scoreD} setScoreD={setScoreD} scoreP={scoreP} setScoreP={setScoreP} deckD={deckD} setDeckD={setDeckD} deckP={deckP} setDeckP={setDeckP} money={money} setMoney={setMoney} bet={bet} setBet={setBet} phase={phase} setPhase={setPhase}/>\n        <Choose deck={deck} setDeck={setDeck} deckInit={deckInit} inform={inform} setInform={setInform} scoreD={scoreD} setScoreD={setScoreD} scoreP={scoreP} setScoreP={setScoreP} deckD={deckD} setDeckD={setDeckD} deckP={deckP} setDeckP={setDeckP} money={money} setMoney={setMoney} bet={bet} setBet={setBet} phase={phase} setPhase={setPhase}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC;EACA,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EACvC,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAC,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyB,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM2B,QAAQ,GAAGA,CAAA,KAAM;IACrBP,OAAO,CAAC,CACN,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,OAAO,CAAC,EAC/J,CAAC,CAAC,EAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAC,SAAS,CAAC,EAAC,CAAC,CAAC,EAAC,SAAS,CAAC,EAAC,CAAC,EAAE,EAAC,SAAS,CAAC,EAAC,CAAC,EAAE,EAAC,SAAS,CAAC,EAAC,CAAC,EAAE,EAAC,SAAS,CAAC,EAAC,CAAC,EAAE,EAAC,SAAS,CAAC,EACzL,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,CAAC,EAAC,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,OAAO,CAAC,EAAC,CAAC,EAAE,EAAC,OAAO,CAAC,EAC/J,CAAC,CAAC,EAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,EAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,EAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,EAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,EAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,EAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,EAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,EAAC,QAAQ,CAAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}